---
source: ironsmith-parser/src/lib.rs
expression: ast
input_file: ironsmith-parser/fixtures/errors.smithy
---
Ast {
    control: [
        (
            "version",
            String(
                String(
                    "2.0",
                ),
            ),
        ),
    ],
    metadata: [],
    shapes: Some(
        ShapeSection {
            namespace: "smithy.protocoltests.rpcv2Cbor",
            uses: [
                AbsoluteRootShapeId {
                    namespace: "smithy.test",
                    identifier: "httpRequestTests",
                },
                AbsoluteRootShapeId {
                    namespace: "smithy.test",
                    identifier: "httpResponseTests",
                },
                AbsoluteRootShapeId {
                    namespace: "smithy.protocols",
                    identifier: "rpcv2Cbor",
                },
            ],
            shapes: [
                Shape(
                    ShapeWithTraits {
                        traits: [
                            Trait {
                                shape_id: ShapeId {
                                    root_shape_id: Relative(
                                        "idempotent",
                                    ),
                                    shape_id_member: None,
                                },
                                body: None,
                            },
                        ],
                        shape: Operation(
                            OperationShape {
                                identifier: "GreetingWithErrors",
                                mixins: [],
                                body: [
                                    Output(
                                        Explicit(
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "GreetingWithErrorsOutput",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ),
                                    ),
                                    Errors(
                                        [
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "InvalidGreeting",
                                                ),
                                                shape_id_member: None,
                                            },
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "ComplexError",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ],
                                    ),
                                ],
                            },
                        ),
                    },
                ),
                Shape(
                    ShapeWithTraits {
                        traits: [],
                        shape: Aggregate(
                            AggregateShape {
                                type_name: Structure,
                                identifier: "GreetingWithErrorsOutput",
                                for_resource: None,
                                mixins: [],
                                members: [
                                    ShapeMember {
                                        traits: [],
                                        identifier: "greeting",
                                        shape_id: Some(
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "String",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ),
                                        value: None,
                                    },
                                ],
                            },
                        ),
                    },
                ),
                Shape(
                    ShapeWithTraits {
                        traits: [
                            Trait {
                                shape_id: ShapeId {
                                    root_shape_id: Relative(
                                        "error",
                                    ),
                                    shape_id_member: None,
                                },
                                body: Some(
                                    Node(
                                        String(
                                            String(
                                                "client",
                                            ),
                                        ),
                                    ),
                                ),
                            },
                        ],
                        shape: Aggregate(
                            AggregateShape {
                                type_name: Structure,
                                identifier: "InvalidGreeting",
                                for_resource: None,
                                mixins: [],
                                members: [
                                    ShapeMember {
                                        traits: [],
                                        identifier: "Message",
                                        shape_id: Some(
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "String",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ),
                                        value: None,
                                    },
                                ],
                            },
                        ),
                    },
                ),
                Apply(
                    ApplyStatement {
                        shape_id: ShapeId {
                            root_shape_id: Relative(
                                "InvalidGreeting",
                            ),
                            shape_id_member: None,
                        },
                        traits: [
                            Trait {
                                shape_id: ShapeId {
                                    root_shape_id: Relative(
                                        "httpResponseTests",
                                    ),
                                    shape_id_member: None,
                                },
                                body: Some(
                                    Node(
                                        Array(
                                            [
                                                Object(
                                                    [
                                                        NodeKeyValuePair {
                                                            key: "id",
                                                            value: String(
                                                                String(
                                                                    "RpcV2CborInvalidGreetingError",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "documentation",
                                                            value: String(
                                                                String(
                                                                    "Parses simple RpcV2 Cbor errors",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "protocol",
                                                            value: String(
                                                                ShapeId(
                                                                    ShapeId {
                                                                        root_shape_id: Relative(
                                                                            "rpcv2Cbor",
                                                                        ),
                                                                        shape_id_member: None,
                                                                    },
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "params",
                                                            value: Object(
                                                                [
                                                                    NodeKeyValuePair {
                                                                        key: "Message",
                                                                        value: String(
                                                                            String(
                                                                                "Hi",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "code",
                                                            value: Number(
                                                                "400",
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "headers",
                                                            value: Object(
                                                                [
                                                                    NodeKeyValuePair {
                                                                        key: "smithy-protocol",
                                                                        value: String(
                                                                            String(
                                                                                "rpc-v2-cbor",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    NodeKeyValuePair {
                                                                        key: "Content-Type",
                                                                        value: String(
                                                                            String(
                                                                                "application/cbor",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "body",
                                                            value: String(
                                                                String(
                                                                    "v2ZfX3R5cGV4LnNtaXRoeS5wcm90b2NvbHRlc3RzLnJwY3YyQ2JvciNJbnZhbGlkR3JlZXRpbmdnTWVzc2FnZWJIaf8=",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "bodyMediaType",
                                                            value: String(
                                                                String(
                                                                    "application/cbor",
                                                                ),
                                                            ),
                                                        },
                                                    ],
                                                ),
                                            ],
                                        ),
                                    ),
                                ),
                            },
                        ],
                    },
                ),
                Shape(
                    ShapeWithTraits {
                        traits: [
                            Trait {
                                shape_id: ShapeId {
                                    root_shape_id: Relative(
                                        "error",
                                    ),
                                    shape_id_member: None,
                                },
                                body: Some(
                                    Node(
                                        String(
                                            String(
                                                "client",
                                            ),
                                        ),
                                    ),
                                ),
                            },
                        ],
                        shape: Aggregate(
                            AggregateShape {
                                type_name: Structure,
                                identifier: "ComplexError",
                                for_resource: None,
                                mixins: [],
                                members: [
                                    ShapeMember {
                                        traits: [],
                                        identifier: "TopLevel",
                                        shape_id: Some(
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "String",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ),
                                        value: None,
                                    },
                                    ShapeMember {
                                        traits: [],
                                        identifier: "Nested",
                                        shape_id: Some(
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "ComplexNestedErrorData",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ),
                                        value: None,
                                    },
                                ],
                            },
                        ),
                    },
                ),
                Shape(
                    ShapeWithTraits {
                        traits: [],
                        shape: Aggregate(
                            AggregateShape {
                                type_name: Structure,
                                identifier: "ComplexNestedErrorData",
                                for_resource: None,
                                mixins: [],
                                members: [
                                    ShapeMember {
                                        traits: [],
                                        identifier: "Foo",
                                        shape_id: Some(
                                            ShapeId {
                                                root_shape_id: Relative(
                                                    "String",
                                                ),
                                                shape_id_member: None,
                                            },
                                        ),
                                        value: None,
                                    },
                                ],
                            },
                        ),
                    },
                ),
                Apply(
                    ApplyStatement {
                        shape_id: ShapeId {
                            root_shape_id: Relative(
                                "ComplexError",
                            ),
                            shape_id_member: None,
                        },
                        traits: [
                            Trait {
                                shape_id: ShapeId {
                                    root_shape_id: Relative(
                                        "httpResponseTests",
                                    ),
                                    shape_id_member: None,
                                },
                                body: Some(
                                    Node(
                                        Array(
                                            [
                                                Object(
                                                    [
                                                        NodeKeyValuePair {
                                                            key: "id",
                                                            value: String(
                                                                String(
                                                                    "RpcV2CborComplexError",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "documentation",
                                                            value: String(
                                                                String(
                                                                    "Parses a complex error with no message member",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "protocol",
                                                            value: String(
                                                                ShapeId(
                                                                    ShapeId {
                                                                        root_shape_id: Relative(
                                                                            "rpcv2Cbor",
                                                                        ),
                                                                        shape_id_member: None,
                                                                    },
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "params",
                                                            value: Object(
                                                                [
                                                                    NodeKeyValuePair {
                                                                        key: "TopLevel",
                                                                        value: String(
                                                                            String(
                                                                                "Top level",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    NodeKeyValuePair {
                                                                        key: "Nested",
                                                                        value: Object(
                                                                            [
                                                                                NodeKeyValuePair {
                                                                                    key: "Foo",
                                                                                    value: String(
                                                                                        String(
                                                                                            "bar",
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ],
                                                                        ),
                                                                    },
                                                                ],
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "code",
                                                            value: Number(
                                                                "400",
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "headers",
                                                            value: Object(
                                                                [
                                                                    NodeKeyValuePair {
                                                                        key: "smithy-protocol",
                                                                        value: String(
                                                                            String(
                                                                                "rpc-v2-cbor",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    NodeKeyValuePair {
                                                                        key: "Content-Type",
                                                                        value: String(
                                                                            String(
                                                                                "application/cbor",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "body",
                                                            value: String(
                                                                String(
                                                                    "v2ZfX3R5cGV4K3NtaXRoeS5wcm90b2NvbHRlc3RzLnJwY3YyQ2JvciNDb21wbGV4RXJyb3JoVG9wTGV2ZWxpVG9wIGxldmVsZk5lc3RlZL9jRm9vY2Jhcv//",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "bodyMediaType",
                                                            value: String(
                                                                String(
                                                                    "application/cbor",
                                                                ),
                                                            ),
                                                        },
                                                    ],
                                                ),
                                                Object(
                                                    [
                                                        NodeKeyValuePair {
                                                            key: "id",
                                                            value: String(
                                                                String(
                                                                    "RpcV2CborEmptyComplexError",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "protocol",
                                                            value: String(
                                                                ShapeId(
                                                                    ShapeId {
                                                                        root_shape_id: Relative(
                                                                            "rpcv2Cbor",
                                                                        ),
                                                                        shape_id_member: None,
                                                                    },
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "code",
                                                            value: Number(
                                                                "400",
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "headers",
                                                            value: Object(
                                                                [
                                                                    NodeKeyValuePair {
                                                                        key: "smithy-protocol",
                                                                        value: String(
                                                                            String(
                                                                                "rpc-v2-cbor",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    NodeKeyValuePair {
                                                                        key: "Content-Type",
                                                                        value: String(
                                                                            String(
                                                                                "application/cbor",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "body",
                                                            value: String(
                                                                String(
                                                                    "v2ZfX3R5cGV4K3NtaXRoeS5wcm90b2NvbHRlc3RzLnJwY3YyQ2JvciNDb21wbGV4RXJyb3L/",
                                                                ),
                                                            ),
                                                        },
                                                        NodeKeyValuePair {
                                                            key: "bodyMediaType",
                                                            value: String(
                                                                String(
                                                                    "application/cbor",
                                                                ),
                                                            ),
                                                        },
                                                    ],
                                                ),
                                            ],
                                        ),
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ],
        },
    ),
}
